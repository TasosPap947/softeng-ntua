{
	"info": {
		"_postman_id": "6cee1210-b3df-4473-9538-927cd4b88f0d",
		"name": "admin",
		"description": "Admin operational endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "healthcheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema1 = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"status\": { \"type\": \"string\" },",
							"        \"dbconnection\": { \"type\": \"object\" }",
							"    },",
							"    \"required\": [\"status\", \"dbconnection\"]",
							"};",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Schema is valid\", () => {",
							"    pm.response.to.have.jsonSchema(schema1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/admin/healthcheck?format=json",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"admin",
						"healthcheck"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						}
					]
				},
				"description": "Returns connection to database status and the dbconnection string used"
			},
			"response": []
		},
		{
			"name": "resetpasses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema1 = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"status\": { \"type\": \"string\" },",
							"        \"message\": { \"type\": \"object\" }",
							"    },",
							"    \"required\": [\"status\"]",
							"};",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Schema is valid\", () => {",
							"    pm.response.to.have.jsonSchema(schema1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/admin/resetpasses?format=json",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"admin",
						"resetpasses"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						}
					]
				},
				"description": "Deletes all the passes from the database"
			},
			"response": []
		},
		{
			"name": "resetstations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema1 = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"status\": { \"type\": \"string\" },",
							"        \"message\": { \"type\": \"object\" }",
							"    },",
							"    \"required\": [\"status\"]",
							"};",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Schema is valid\", () => {",
							"    pm.response.to.have.jsonSchema(schema1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/admin/resetstations?format=json",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"admin",
						"resetstations"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						}
					]
				},
				"description": "Deletes all the stations from the database"
			},
			"response": []
		},
		{
			"name": "resetvehicles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema1 = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"status\": { \"type\": \"string\" },",
							"        \"message\": { \"type\": \"object\" }",
							"    },",
							"    \"required\": [\"status\"]",
							"};",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Schema is valid\", () => {",
							"    pm.response.to.have.jsonSchema(schema1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/admin/resetvehicles?format=json",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"admin",
						"resetvehicles"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						}
					]
				},
				"description": "Deletes all the vehicles from the database and then inserts default values"
			},
			"response": []
		}
	]
}